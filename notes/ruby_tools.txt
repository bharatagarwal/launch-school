Rake
Automates common functions required to build, test, package, and install programs.

Bundler
Lets you manage the various dependencies in a Ruby project.

Rbenv
RVM
Lets you install, manage, and use multiple versions of Ruby.


RubyGems
Packages of code that you can download, install, and use in your Ruby programs or from the command line.
---

Gemfile.lock
GEM
  remote: https://rubygems.org/
  specs:
    mustermann (1.0.0)
    pg (0.21.0)
    rack (2.0.3)
    rack-protection (2.0.0)
      rack
    sequel (4.48.0)
    sinatra (2.0.0)
      mustermann (~> 1.0)
      rack (~> 2.0)
      rack-protection (= 2.0.0)
      tilt (~> 2.0)
    tilt (2.0.7)

PLATFORMS
  ruby

DEPENDENCIES
  pg (~> 0.21.0)
  sequel (~> 4.48)
  sinatra (~> 2.0)

RUBY VERSION
   ruby 2.3.1p112

BUNDLED WITH
   1.15.1
--

Gem
source 'https://rubygems.org'

ruby '2.3.1'

gem 'sinatra', '~> 2.0'
gem 'postgres', '~> 0.8.1'
gem 'sequel', '~> 4.48'
gem 'minitest', '~> 5.10'
gem 'minitest-reporters', '~> 1.1'
gem 'rake', '~> 12.0'

gemspec
--

Rakefile

desc 'Run tests'
task :test do
  sh 'ruby ./test/my_app_test.rb'
end

desc 'Run tests'
task :default => :test
--

Gemfile & Gemfile.lock are a part of Bundler.
Bundler uses Gemfile to determine which version of Ruby and what Rubygems your application needs.
Bundler creates a Gemfile.lock file that contains your application's dependency information.


Run bundle install to create Gemfile.lock
--

Gem::LoadError: You have already activated rake 11.3.0, but your Gemfile requires rake 10.4.2.

Prepending `bundle exec` to your command may solve this.

Exec runs a command, providing it access to the gems in the bundle. While using bundle exec you can require and call the bundled gems as if they were installed into the systemwide RubyGems repository.
