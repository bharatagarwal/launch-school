{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf830
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 =begin\
Have the method division_stringified(num1, num2) take both parameters being passed,\
divide num1 by num2, and return the result as a string with properly formatted commas.\
If an answer is only 3 digits long, return the number with no commas.\
\
For example: if num1 is 123456789 and num2 is 10000 the output should be "12,346".\
\
Note: 2 divided by 3 should return '1'\
=end\
\
# problem\
# format with commas\
# if there are three numbers, no commas\
# if more, add commas\
\
# get a divisor\
# take the divisor, convert to a string\
# check the length of the string\
# divide length of string by 3\
\
# 12346\
# convert number to string, and then into characters\
\
def division_answer(num1, num2)\
  (num1.to_f / num2).round\
end\
\
def create_separated_array(number)\
  array = []\
  while number > 1000\
    number, remainder = number.divmod(1000)\
    array << remainder.to_s\
  end\
  \
  array << number.to_s\
  \
  array.reverse!\
  \
  array.map do |element| \
    if element == '0' && array.first != '0'\
      '000'\
    else\
      element\
    end\
  end\
end\
\
def division_stringified(num1, num2)\
  answer = division_answer(num1, num2)\
  array = create_separated_array(answer)\
  array.join(',')\
end\
\
# p division_stringified(1234,1)\
\
p division_stringified(2, 3) == "1"\
p division_stringified(5, 2) == "3"\
p division_stringified(7, 3) == "2"\
p division_stringified(6874, 67) == "103"\
p division_stringified(503394930, 43) == "11,706,859"\
p division_stringified(1, 10) == "0"\
p division_stringified(100000, 1) == "100,000"}