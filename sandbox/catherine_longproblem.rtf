{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf830
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 # Crypto Square\
\
# Implement the classic method for composing secret messages called a square code.\
\
# Given an English text, output the encoded version of that text.\
\
# First, the input is normalized: the spaces and punctuation are removed\
# from the English text and the message is downcased.\
\
# Then, the normalized characters are broken into rows.  These rows can be\
# regarded as forming a rectangle when printed with intervening newlines.\
\
# For example, the sentence\
\
# > If man was meant to stay on the ground, god would have given us roots.\
\
# is normalized to:\
\
# > ifmanwasmeanttostayonthegroundgodwouldhavegivenusroots\
\
# The plaintext should be organized in to a rectangle.  The size of the\
# rectangle (`r x c`) should be decided by the length of the message,\
# such that `c >= r` and `c - r <= 1`, where `c` is the number of columns\
# and `r` is the number of rows.\
\
# Our normalized text is 54 characters long, dictating a rectangle with\
# `c = 8` and `r = 7`:\
\
# ```text\
# ifmanwas\
# meanttos\
# tayonthe\
# groundgo\
# dwouldha\
# vegivenu\
# sroots\
# ```\
\
# The coded message is obtained by reading down the columns going left to\
# right.\
\
# The message above is coded as:\
\
# ```text\
# imtgdvsfearwermayoogoanouuiontnnlvtwttddesaohghnsseoau\
# ```\
\
# Output the encoded text in chunks.  Phrases that fill perfect rectangles\
# `(r X c)` should be output `c` chunks of `r` length, separated by spaces.\
# Phrases that do not fill perfect rectangles will have `n` empty spaces.\
# Those spaces should be distributed evenly, added to the end of the last\
# `n` chunks.\
\
# ```text\
# imtgdvs fearwer mayoogo anouuio ntnnlvt wttddes aohghn  sseoau\
# ```\
\
# Notice that were we to stack these, we could visually decode the\
# cyphertext back in to the original message:\
\
# ```text\
# imtgdvs\
# fearwer\
# mayoogo\
# anouuio\
# ntnnlvt\
# wttddes\
# aohghn\
# sseoau\
# ```\
=begin}