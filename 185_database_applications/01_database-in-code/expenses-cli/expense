#! /usr/bin/env ruby

require 'pg'

db = PG.connect(dbname: "expenses")

def display_help
puts <<~SQUIGGLY
  An expense recording system
    
  Commands:
  
  add AMOUNT MEMO [DATE] - record a new expense
  clear - delete all expenses
  list - list all expenses
  delete NUMBER - remove expense with id NUMBER
  search QUERY - list expenses with a matching memo field
  SQUIGGLY
end

def list_expenses(db)
  result = db.exec "select * from expenses order by id"

  result.each do |tuple|
    output_column = [ 
                      tuple["id"].rjust(3),
                      tuple["created_on"].rjust(10),
                      tuple["amount"].rjust(12),
                      tuple["memo"]
                    ]
                    
    puts output_column.join(' | ')
  end
end

def valid_for_addition?(arguments)
  arguments.size == 2 && 
    arguments[0].to_f.round(2) == arguments[0].to_f.to_s.to_f.round(2)
end

def add_expense(db, arguments)
  amount, memo = arguments[0], arguments[1]

  db.exec <<~HEREDOC
          insert into expenses
          (amount, memo)
          values
          (#{amount}, \'#{memo}\');
  HEREDOC
end
arguments = ARGV
p arguments

if arguments.first == 'list'
  list_expenses(db)
elsif arguments.first == 'add'
  addition_arguments = arguments[1..-1]
  
  if valid_for_addition?(addition_arguments)
    add_expense(db, addition_arguments)
  else
    puts "You must provide an amount and memo."
  end
else
  display_help
end